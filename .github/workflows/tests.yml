name: Tests

on:
  push:
    branches:
      - "*"
    paths:
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Run cargo check
        run: cargo check --workspace

  test:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        if: matrix.os == 'windows-latest'
        with:
          cache: "pip"
          python-version: "3.13"
      - name: Install pywin32 on Windows
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pywin32
      - name: Build plugin for Linux and Mac OS
        if: matrix.os != 'windows-latest'
        run: |
          cargo build -p octa_plugin_shell
          cp target/debug/octa_plugin_shell plugins
          cargo build -p octa_plugin_tpl
          cp target/debug/octa_plugin_tpl plugins
      - name: Build plugin for Windows
        if: matrix.os == 'windows-latest'
        run: |
          cargo build -p octa_plugin_shell
          cp target/debug/octa_plugin_shell.exe plugins
          cargo build -p octa_plugin_tpl
          cp target/debug/octa_plugin_tpl.exe plugins
      - name: Run cargo test
        run: cargo test --workspace -- --nocapture
      - name: Upload Log to Github
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: plugin_log
          path: ${{ github.workspace }}/plugins/shell.log
          if-no-files-found: ignore
          retention-days: 10

  lints:
    name: Lints
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy -- -D warnings
